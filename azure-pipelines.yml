# Build on all three platforms
strategy:
  matrix:
    linux:
      imageName: 'ubuntu-18.04'
      containerImage: rockdreamer/conan-gcc9-centos7:latest
      buildosname: 'linux'
      outputArchiveType: 'tar'
      outputArchiveExtension: 'tar.gz'
    mac:
      imageName: 'macos-10.15'
      buildosname: 'macos'
      outputArchiveType: 'tar'
      outputArchiveExtension: 'tar.gz'
    windows:
      imageName: 'vs2017-win2016'
      buildosname: 'windows'
      outputArchiveType: 'zip'
      outputArchiveExtension: 'zip'

pool:
  vmImage: $(imageName)

steps:
# - checkout: self
#   persistCredentials: false
#   displayName: 'ensure hotfixes repo is checked out'

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.8'

- task: PythonScript@0
  inputs:
    scriptSource: 'filePath' # Options: filePath, inline
    scriptPath: build_protobuf.py
    #arguments: # Optional
  displayName: 'Create protobuf build'

# - task: ArchiveFiles@2
#   inputs:
#     rootFolderOrFile: '$(System.DefaultWorkingDirectory)/output/miniconda3-$(miniconda_installer_version)-$(Build.BuildId)-$(buildosname)'
#     archiveFile: '$(Build.ArtifactStagingDirectory)/miniconda3-$(miniconda_installer_version)-$(Build.BuildId)-$(buildosname).$(outputArchiveExtension)' 
#     archiveType: '$(outputArchiveType)'

# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'miniconda-offline-installer'
#     publishLocation: 'Container'
